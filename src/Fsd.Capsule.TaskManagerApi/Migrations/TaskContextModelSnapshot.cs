// <auto-generated />
using System;
using Fsd.Capsule.TaskManagerApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fsd.Capsule.TaskManagerApi.Migrations
{
    [DbContext(typeof(TaskContext))]
    partial class TaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fsd.Capsule.TaskManagerApi.Models.Task", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(5000);

                    b.Property<DateTime?>("EndDate");

                    b.Property<int?>("ParentID");

                    b.Property<int?>("Priority");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int?>("Status");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("TaskID");

                    b.HasIndex("ParentID");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("Fsd.Capsule.TaskManagerApi.Models.Task", b =>
                {
                    b.HasOne("Fsd.Capsule.TaskManagerApi.Models.Task", "Parent")
                        .WithMany("ChildTasks")
                        .HasForeignKey("ParentID");
                });
#pragma warning restore 612, 618
        }
    }
}
