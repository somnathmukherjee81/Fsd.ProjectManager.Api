// <auto-generated />
using System;
using Fsd.ProjectManager.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fsd.ProjectManager.Api.Migrations
{
    [DbContext(typeof(ProjectManagerContext))]
    [Migration("20180830213034_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fsd.ProjectManager.Api.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(5000);

                    b.Property<DateTime?>("EndDate");

                    b.Property<int?>("ManagerId");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime?>("StartDate");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("ProjectId");

                    b.HasIndex("ManagerId")
                        .IsUnique()
                        .HasFilter("[ManagerId] IS NOT NULL");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Fsd.ProjectManager.Api.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(5000);

                    b.Property<DateTime?>("EndDate");

                    b.Property<int?>("ParentId");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("ProjectId");

                    b.Property<DateTime?>("StartDate");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int?>("UserId");

                    b.HasKey("TaskId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("Fsd.ProjectManager.Api.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int?>("ManagedProjectId");

                    b.Property<int?>("ProjectId");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("UserId");

                    b.HasAlternateKey("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Fsd.ProjectManager.Api.Models.Project", b =>
                {
                    b.HasOne("Fsd.ProjectManager.Api.Models.User", "Manager")
                        .WithOne("ManagedProject")
                        .HasForeignKey("Fsd.ProjectManager.Api.Models.Project", "ManagerId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Fsd.ProjectManager.Api.Models.Task", b =>
                {
                    b.HasOne("Fsd.ProjectManager.Api.Models.Task", "Parent")
                        .WithMany("ChildTasks")
                        .HasForeignKey("ParentId");

                    b.HasOne("Fsd.ProjectManager.Api.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Fsd.ProjectManager.Api.Models.User", "AssignedTo")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Fsd.ProjectManager.Api.Models.User", b =>
                {
                    b.HasOne("Fsd.ProjectManager.Api.Models.Project", "Project")
                        .WithMany("Members")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
